{
    "headerTitle": "Test Assignment for SquareGPS",
    "markerList": "Markers",
    "aboutMenuItem": "About the Assignment",
    "mapMenuItem": "Map",
    "searchAddress": "Address search",
    "russianLanguage": "Russian",
    "englishLanguage": "English",
    "aboutTitle": "SquareGPS Test Assignment",
    "emptyList": "Nothing is selected.",
    "text1": "You need to create an application using <strong>Vuejs</strong>, <strong>Vuex</strong>, <strong>VueRouter</strong>, <strong>Vuetify</strong>. The application header should contain a menu with two items: <strong>About the Assignment</strong> and <strong>Map</strong>. The main part of the application should display the content of the sections.",
    "text2": "“About the Assignment” Section",
    "text3": "The section should contain the text of this assignment, laid out similarly.",
    "text4": "“Map” Section",
    "text5": "The screen should display the map and a list (see example):",
    "text6": "When clicking the add button, the map should enter marker addition mode: a marker should appear at the click location, and a list entry with the point's address should be added.",
    "text7": "You can use any free geocoding API for address lookup, for example: https://geocode.maps.co/.",
    "text8": "If the address is not found, an error should be displayed and the marker should not be added to the list.",
    "text9": "Clicking on a marker should highlight the corresponding list entry.",
    "text10": "Clicking on a list entry should center the map on the marker.",
    "text11": "Markers should be stored locally and persist after the page is reloaded.",
    "text12": "The id of the selected marker should be displayed in the address bar.",
    "text13": "Local data storage should be organized as a service emulating a backend. (A Backend class is required that pseudo-asynchronously saves data to localStorage)",
    "text14": "Additionally:",
    "text15": "Design the display for mobile devices.",
    "text16": "Implement localization.",
    "text17": "You need to write one unit test for any component using <strong>jest</strong>.",
    "text18": "<strong>Reminder:</strong> The test assignment is intended to demonstrate the ability to write good modular code, as well as the ability to use the specified technologies and more.<br> This code should be something to be proud of.",
    "text19": "Example:",
    "text20": "Successful",
    "text21": "Map is not initialized.",
    "text22": "An error occurred while adding a marker.",
    "text23": "OpenCage API key is not configured.",
    "text24": "OpenCage API key not found. Please check the configuration.",
    "text26": "Error while searching for addresses.",
    "text27": "Error while retrieving the address.",
    "text28": "Address not found.",
    "text29": "Error while selecting the address.",
    "text30": "Map is not initialized."
}
